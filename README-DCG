DCG Build instructions:

To build examples and other projects to be used with the DCGDarknet hardware:

Enter the project directory, type make TARGET=dcg-mcmote
This will build .bin .o and .map files for the mc13224v target on all the DCG hardware.

To have a clean directory, type make TARGET=dcg-mcmote clean
This will remove all files generated by make.

In order to have a workable network you need to build the following:
in dcgcontiki/tools : make tunslip6
in dcgcontiki/examples/ipv6/rpl-border-router : make TARGET=dcg-mcmote
in dcgcontiki/projects/mote-coap : make TARGET=dcg-mcmote

Once all files are built, load them onto the motes using JTAG, the steps are the following if you do not have an openocd proc setup:

soft_reset_halt
load_image dcghardware/ramflasher_dcg-mcmote.bin 0x00400000
load_image <path-to.bin-to-flash 0x00408000
resume 0x00400000

After the resume wait 10-15 seconds then:

reset

this will flash the code into the SPI flash on the DCG hardware.  ramflasher_dcg-mcmote.bin can be found at the dcghardware.git as a binary file.

Once you have 1 border router and a couple of motes:
in the dcgcontiki/tools directory: sudo ./tunslip6 -s ttyUSB0 2001:470:a82d:303::1/64

This will start a serial tunnel to the boarder router.  It should display the address of the webserver etc on the terminal you started tunslip in.  use this address in a web browser like http://[ipv6 address]  The []'s are important in order to use v6 addresses.

Once you see neighbors and routes (you have to have other motes started) you can access CoAP on a mote by:
In firefox, first install the Copper exension for CoAP.
Then in the address bar go to coap://[ipv6 address] it should bring up the coap interface.
Select 'Discover' from the toolbar. you should see all the available CoAP methods.

That's it, have fun, experiment.
~Anch + Omega
